{"version":3,"sources":["firebase.js","components/Todo.jsx","components/RealTimeTodo.jsx","App.jsx","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","db","getFirestore","realdb","getDatabase","userCol","collection","validationSchema","yup","title","required","id","a","deleteDoc","doc","console","log","alert","Todo","useState","todo","settodo","useEffect","getDocs","querySnapshot","forEach","keyObj","push","data","getData","formik","useFormik","initialValues","description","onSubmit","values","addDoc","docRef","error","Box","sx","flexGrow","m","Typography","variant","component","handleSubmit","Paper","style","margin","padding","elevation","Grid","container","alignItems","spacing","xs","md","item","paddingRight","TextField","fullWidth","placeholder","color","label","name","value","onChange","handleChange","touched","Boolean","errors","helperText","Button","type","List","map","eachTodo","i","ListItem","onClick","del","secondaryAction","IconButton","edge","aria-label","ListItemText","primary","secondary","remove","ref","RealtimeTodo","starCountRef","temp","unsubscribe","onValue","snapshot","key","val","writeUserData","e","App","history","useHistory","AppBar","position","Toolbar","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edfefb3e.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getDatabase } from \"firebase/database\";\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDJDT33XLSm76PVaUNM1egOy4zBcQ3XY3c\",\n  authDomain: \"react-js-todo-ta.firebaseapp.com\",\n  projectId: \"react-js-todo-ta\",\n  storageBucket: \"react-js-todo-ta.appspot.com\",\n  messagingSenderId: \"208448600512\",\n  appId: \"1:208448600512:web:e7001b6c6a7f512270b025\",\n  databaseURL: \"https://react-js-todo-ta-default-rtdb.firebaseio.com\",\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\n\nexport const db = getFirestore();\n\nexport const realdb = getDatabase();\n","import { useFormik } from \"formik\";\nimport Box from \"@mui/material/Box\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport IconButton from \"@mui/material/IconButton\";\nimport * as yup from \"yup\";\nimport { collection, addDoc, getDocs, deleteDoc, doc } from \"firebase/firestore\";\nimport { useEffect, useState } from \"react\";\nimport { db } from \"../firebase\";\n\nconst userCol = collection(db, \"todo\");\n\nconst validationSchema = yup.object({\n  title: yup.string(\"Enter your email\").required(\"Email is required\"),\n});\n\nasync function del(id) {\n  // await userCol.doc(id).delete();\n  await deleteDoc(doc(db, \"todo\",id));\n  // await deleteField (ref(db, `/realTimeTodo/${id}`));\n  console.log(\"Document deleted with ID: \", id);\n  alert(\"Todo Deleted\");\n}\n\nfunction Todo() {\n  const [todo, settodo] = useState([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      const querySnapshot = await getDocs(userCol);\n      let todo = [];\n      // console.log(querySnapshot);\n      querySnapshot.forEach((doc) => {\n        let keyObj = { id: doc.id };\n        todo.push({ ...keyObj, ...doc.data() });\n        // console.log(todo);\n      });\n      settodo(todo);\n    };\n    getData();\n\n    return () => {\n      console.log(\"cleanup\");\n    };\n  }, []);\n\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      description: \"\",\n    },\n    onSubmit: async (values) => {\n      try {\n        const docRef = await addDoc(userCol, {\n          title: values.title,\n          description: values.description,\n        });\n        console.log(\"Document written with ID: \", docRef.id);\n        alert(\"Todo Added\");\n      } catch (e) {\n        console.error(\"Error adding document: \", e);\n      }\n    },\n    validationSchema: validationSchema,\n  });\n\n  return (\n    <Box sx={{ flexGrow: 1, m: 2 }}>\n      <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n        Todo\n      </Typography>\n\n      <form onSubmit={formik.handleSubmit}>\n        <Paper style={{ margin: 16, padding: 16 }} elevation={3}>\n          <Grid container alignItems=\"center\" spacing={2}>\n            <Grid xs={5} md={10} item style={{ paddingRight: 16 }}>\n              <TextField\n                fullWidth\n                placeholder=\"Add Todo here\"\n                color=\"primary\"\n                id=\"outlined-basic\"\n                label=\"Task\"\n                variant=\"filled\"\n                name=\"title\"\n                value={formik.values.title}\n                onChange={formik.handleChange}\n                error={formik.touched.title && Boolean(formik.errors.title)}\n                helperText={formik.touched.title && formik.errors.title}\n              />\n            </Grid>\n            <Grid xs={5} md={10} item style={{ paddingRight: 16 }}>\n              <TextField\n                fullWidth\n                color=\"primary\"\n                id=\"outlined-basic\"\n                label=\"Description\"\n                variant=\"filled\"\n                name=\"description\"\n                value={formik.values.description}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.description &&\n                  Boolean(formik.errors.description)\n                }\n                helperText={\n                  formik.touched.description && formik.errors.description\n                }\n              />\n            </Grid>\n            <Grid xs={2} md={2} item>\n              <Button\n                fullWidth\n                color=\"success\"\n                variant=\"contained\"\n                type=\"submit\"\n              >\n                Add\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </form>\n\n      <Paper style={{ margin: 16, padding: 16 }} elevation={3}>\n        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n          Recently Added:\n        </Typography>\n        <List spacing={3}>\n          {todo.map((eachTodo, i) => {\n            return (\n              <Paper\n                key={eachTodo.id ? eachTodo.id : i}\n                style={{ margin: 10 }}\n                elevation={3}\n                id={eachTodo.id ? eachTodo.id : i}\n              >\n                <ListItem\n                  onClick={() => {\n                    del(eachTodo.id);\n                  }}\n                  secondaryAction={\n                    <IconButton edge=\"end\" aria-label=\"delete\">\n                      <DeleteIcon />\n                    </IconButton>\n                  }\n                >\n                  <ListItemText\n                    primary={eachTodo.title}\n                    secondary={eachTodo.description}\n                  />\n                </ListItem>\n              </Paper>\n            );\n          })}\n        </List>\n      </Paper>\n    </Box>\n  );\n}\n\nexport default Todo;\n","import { useFormik } from \"formik\";\nimport Box from \"@mui/material/Box\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport IconButton from \"@mui/material/IconButton\";\nimport * as yup from \"yup\";\nimport { useEffect, useState } from \"react\";\nimport { ref, push, onValue, remove } from \"firebase/database\";\nimport { realdb } from \"../firebase\";\n\nconst validationSchema = yup.object({\n  title: yup.string(\"Enter your email\").required(\"Email is required\"),\n});\n\nasync function del(id) {\n  await remove(ref(realdb, `/realTimeTodo/${id}`));\n}\n\nfunction RealtimeTodo() {\n  const [todo, settodo] = useState([]);\n\n  useEffect(() => {\n    const starCountRef = ref(realdb, \"realTimeTodo/\");\n    let temp = [];\n    const unsubscribe = onValue(starCountRef, (snapshot) => {\n      const data = snapshot;\n      // console.log(data);\n      data.forEach((doc) => {\n        let keyObj = { id: doc.key };\n        temp.push({ ...keyObj, ...doc.val() });\n      });\n      console.log(temp);\n      settodo(temp);\n      temp = [];\n    });\n\n    return () => {\n      unsubscribe();\n      console.log(\"unsub\");\n    };\n  }, []);\n\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      description: \"\",\n    },\n    onSubmit: async (values) => {\n      try {\n        function writeUserData(title, description) {\n          push(ref(realdb, \"realTimeTodo/\"), {\n            title: values.title,\n            description: values.description,\n            // timestamp: firebase.database.FieldValue.serverTimestamp(),\n          });\n        }\n        writeUserData();\n        console.log(\"Document written with ID: \");\n      } catch (e) {\n        console.error(\"Error adding document: \", e);\n      }\n    },\n    validationSchema: validationSchema,\n  });\n\n  return (\n    <Box sx={{ flexGrow: 1, m: 2 }}>\n      <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n        Realtime Todo\n      </Typography>\n\n      <form onSubmit={formik.handleSubmit}>\n        <Paper style={{ margin: 16, padding: 16 }} elevation={3}>\n          <Grid container alignItems=\"center\" spacing={2}>\n            <Grid xs={5} md={10} item style={{ paddingRight: 16 }}>\n              <TextField\n                fullWidth\n                placeholder=\"Add Todo here\"\n                color=\"primary\"\n                id=\"outlined-basic\"\n                label=\"Task\"\n                variant=\"filled\"\n                name=\"title\"\n                value={formik.values.title}\n                onChange={formik.handleChange}\n                error={formik.touched.title && Boolean(formik.errors.title)}\n                helperText={formik.touched.title && formik.errors.title}\n              />\n            </Grid>\n            <Grid xs={5} md={10} item style={{ paddingRight: 16 }}>\n              <TextField\n                fullWidth\n                color=\"primary\"\n                id=\"outlined-basic\"\n                label=\"Description\"\n                variant=\"filled\"\n                name=\"description\"\n                value={formik.values.description}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.description &&\n                  Boolean(formik.errors.description)\n                }\n                helperText={\n                  formik.touched.description && formik.errors.description\n                }\n              />\n            </Grid>\n            <Grid xs={2} md={2} item>\n              <Button\n                fullWidth\n                color=\"success\"\n                variant=\"contained\"\n                type=\"submit\"\n              >\n                Add\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </form>\n      <Paper style={{ margin: 16, padding: 16 }} elevation={3}>\n        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n          Recently Added:\n        </Typography>\n        <List spacing={3}>\n          {todo.map((eachTodo) => {\n            return (\n              <Paper\n                key={eachTodo.id}\n                id={eachTodo.id}\n                style={{ margin: 10 }}\n                elevation={3}\n              >\n                <ListItem\n                  onClick={() => {\n                    del(eachTodo.id);\n                  }}\n                  secondaryAction={\n                    <IconButton edge=\"end\" aria-label=\"delete\">\n                      <DeleteIcon />\n                    </IconButton>\n                  }\n                >\n                  <ListItemText\n                    primary={eachTodo.title}\n                    secondary={eachTodo.description}\n                  />\n                </ListItem>\n              </Paper>\n            );\n          })}\n        </List>\n      </Paper>\n    </Box>\n  );\n}\n\nexport default RealtimeTodo;\n","import { Switch, Route, useHistory } from \"react-router-dom\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\nimport Todo from \"./components/Todo\";\nimport RealtimeTodo from \"./components/RealTimeTodo\";\n\nfunction App() {\n  let history = useHistory();\n\n  return (\n    <>\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography\n              onClick={() => {\n                history.push(\"/\");\n              }}\n              variant=\"h6\"\n              component=\"div\"\n              sx={{ flexGrow: 1 }}\n            >\n              Firestore Example\n            </Typography>\n            <Button\n              color=\"inherit\"\n              variant=\"text\"\n              onClick={() => {\n                history.push(\"/\");\n              }}\n            >\n              Todo\n            </Button>\n            <Button\n              color=\"inherit\"\n              variant=\"text\"\n              onClick={() => {\n                history.push(\"/realtime\");\n              }}\n            >\n              Real-Time Todo\n            </Button>\n          </Toolbar>\n        </AppBar>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Todo />\n          </Route>\n\n          <Route path=\"/realtime\">\n            <RealtimeTodo />\n          </Route>\n        </Switch>\n      </Box>\n    </>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}